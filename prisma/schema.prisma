generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int            @id @default(autoincrement())
  role         Role           @default(USER)
  first_name   String
  last_name    String
  phone        String
  email        String         @unique
  username     String         @unique
  address      String
  gender       String
  birth_date   String
  country_id   String
  city         String
  category     String
  document_id  String         @unique
  user_state   String
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  deleted      Boolean        @default(false)
  deleted_at   DateTime?
  Transactions Transactions[]
  User_Bets    User_Bets[]
}

model Transactions {
  id          Int       @id @default(autoincrement())
  user        Users     @relation(fields: [userId], references: [id])
  userId      Int
  amount      String
  category    String
  status      String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted     Boolean   @default(false)
  deleted_at  DateTime?
  bets        Bets?     @relation(fields: [user_bet_id], references: [id])
  user_bet_id Int?
}

model Bets {
  id           Int            @id @default(autoincrement())
  bet_option   Int
  sport        String
  status       String
  name         String
  event_id     String
  odd          Float
  result       String
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  deleted      Boolean        @default(false)
  deleted_at   DateTime?
  Transactions Transactions[]
  User_Bets    User_Bets[]
}

model User_Bets {
  id         Int       @id @default(autoincrement())
  user       Users     @relation(fields: [userId], references: [id])
  userId     Int
  bets       Bets?     @relation(fields: [bet_id], references: [id])
  bet_id     Int?
  odd        Float
  amount     String
  state      String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted    Boolean   @default(false)
  deleted_at DateTime?
}

enum Role {
  USER
  ADMIN
}
